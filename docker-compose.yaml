version: 'version 3.8'

services:
  daphne:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crickstory_app_1
    # command: daphne -b 0.0.0.0 -p 8000 crickstory.asgi:application
    volumes:
      - ./backend:/app 
    # ports:
    # - "8000:8000"
    expose:
      - "8000"
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    networks:
      - app_net
    restart: unless-stopped
  
  nginx:
    image: nginx:latest
    container_name: daphne_lb
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - daphne
    networks:
      - app_net
    restart: unless-stopped


  postgres:
    container_name: postgres_crickstory
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - app_net
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin_crickstory_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin$@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - app_net
    restart: unless-stopped
  redis:
    image: redis:alpine
    container_name: redis_crickstory
    ports:
      - "6379:6379"
    networks:
      - app_net 

networks:
  app_net:
    driver: bridge

volumes:
  postgres_data:
  pgadmin:
